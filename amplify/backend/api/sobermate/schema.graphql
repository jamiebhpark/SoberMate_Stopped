input AMPLIFY { globalAuthRule: AuthRule = { allow: public } }

type Goal @model @auth(rules: [{ allow: public }]) {
  id: ID!
  description: String!
  targetDate: AWSDate!
  reason: String
  dailyLimit: Int
  reward: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type DrinkRecord @model @auth(rules: [{ allow: public }]) {
  id: ID!
  details: String!
  amount: Int!
  content: String!
  feeling: String!
  location: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type DiaryEntry @model @auth(rules: [{ allow: public }]) {
  id: ID!
  content: String!
  feeling: String!
  date: AWSDate!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type CommunityMessage @model @auth(rules: [{ allow: public }]) {
  id: ID!
  content: String!
  sender: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type EmergencyContact @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  phone: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Achievement @model @auth(rules: [{ allow: public }]) {
  id: ID!
  title: String!
  description: String
  dateAchieved: AWSDate!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Reminder @model @auth(rules: [{ allow: public }]) {
  id: ID!
  message: String!
  time: AWSDateTime!
  isEnabled: Boolean!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}
